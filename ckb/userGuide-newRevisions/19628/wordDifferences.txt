diff --git a/user_docs/en/userGuide.t2t b/user_docs/en/userGuide.t2t
index 996404544..c22198ed9 100644
-{-- a/user_docs/en/userGuide.t2t}-
+{++ b/user_docs/en/userGuide.t2t}+
@@ -498,7 +498,6 @@ This includes documents in the following applications:
- Microsoft Edge
- Adobe Reader
- Foxit Reader

- -{Adobe Flash
-}- Supported books in Amazon Kindle for PC
-

@@ -596,7 +595,7 @@ Use the following keys for performing searches:
%kc:endInclude

++ Embedded Objects ++[ImbeddedObjects]

Pages can include rich content using technologies such as -{Adobe Flash,}- Oracle Java and HTML5, as well as applications and dialogs.
Where these are encountered in browse mode, NVDA will report "embedded object", "application" or "dialog", respectively.
You can quickly move to them using the o and shift+o embedded object single letter navigation keys.
To interact with these objects, you can press enter on them.
@@ -794,6 +793,8 @@ For this situation, NVDA contains a feature called "screen curtain" which can be

You can enable the Screen Curtain in the [vision category #VisionSettings] of the [NVDA Settings #NVDASettings] dialog.

+{When the screen curtain is active some tasks directly based on what appears on the screen such as performing [OCR #Win10Ocr] or taking a screenshot cannot be achieved.}+

+ Content Recognition +[ContentRecognition]
When authors don't provide sufficient information for a screen reader user to determine the content of something, various tools can be used to attempt to recognize the content from an image.
NVDA supports the optical character recognition (OCR) functionality built into Windows 10 to recognize text from images.
@@ -815,6 +816,8 @@ NVDA can use this to recognize text from images or inaccessible applications.
You can set the language to use for text recognition in the [Windows 10 OCR category #Win10OcrSettings] of the [NVDA Settings #NVDASettings] dialog.
Additional languages can be installed by opening the Start menu, choosing Settings, selecting Time & Language -> Region & Language and then choosing Add a language.

+{Windows 10 OCR may be partially or fully incompatible with [NVDA vision enhancements #Vision] or other external visual aids. You will need to disable these aids before proceeding to a recognition.}+

%kc:beginInclude
To recognize the text in the current navigator object using Windows 10 OCR, press NVDA+r.
%kc:endInclude
@@ -1743,7 +1746,7 @@ You can configure reporting of:
- Pages and spacing
 - Page numbers
 - Line numbers

 - Line indentation reporting [(Off, Speech, Tones, Both Speech and Tones) -{#lineIndentationOptions]}- +{#DocumentFormattingSettingsLineIndentation]}+
 - Paragraph indentation (e.g. hanging indent, first line indent)
 - Line spacing (single, double, etc.)
 - Alignment
@@ -1751,7 +1754,7 @@ You can configure reporting of:
 - Tables
 - Row/column headers
 - Cell coordinates

 - Cell borders -{[(Off,}- +{(Off,}+ Styles, Both Colours and Styles)
- Elements
 - Headings
 - Links
@@ -1836,6 +1839,24 @@ When this option is enabled, NVDA will use a new, work in progress version of it
==== Speak passwords in UIA consoles ====[AdvancedSettingsWinConsoleSpeakPasswords]
This setting controls whether characters are spoken by [speak typed characters #KeyboardSettingsSpeakTypedCharacters] or [speak typed words #KeyboardSettingsSpeakTypedWords] in situations where the screen does not update (such as password entry) in the Windows Console with UI automation support enabled. For security purposes, this setting should be left disabled. However, you may wish to enable it if you experience performance issues or instability with typed character and/or word reporting while using NVDA's new experimental console support.

==== Use +{UIA with Microsoft Edge and other Chromium based browsers when available ====[ChromiumUIA]
Allows specifying when UIA will be used when it is available in Chromium based browsers such as Microsoft Edge.
UIA support for Chromium based browsers is early in development and may not provide the same level of access as IA2.
The combo box has the following options:
- Default (Only when necessary): The NVDA default, currently this is "Only when necessary". This default may change in the future as the technology matures.
- Only when necessary: When NVDA is unable to inject into the browser process in order to use IA2 and UIA is available, then NVDA will fall back to using UIA.
- Yes: If the browser makes UIA available, NVDA will use it.
- No: Don't use UIA, even if NVDA is unable to inject in process. This may be useful for developers debugging issues with IA2 and want to ensure that NVDA does not fall back to UIA.
-

==== Use UI automation to access Microsoft  Excel spreadsheet controls when available ====[UseUiaForExcel]
When this option is enabled, NVDA will try to use the Microsoft UI Automation accessibility API in order to fetch information from Microsoft Excel Spreadsheet controls.
This is an experimental feature, and some features of Microsoft Excel may not be available in this mode.
For instance, NVDA's Elements List for listing formulas and comments, and Browse mode quick navigation to jump to form fields on a spreadsheet features are not available.
However, for basic spreadsheet navigating / editing, this option may provide a vast performance improvement.
We still do not recommend that  the majority of users turn this on by default, though we do welcome users of Microsoft Excel  build 16.0.13522.10000 or higher to test this feature and provide feedback.
Microsoft Excel's UI automation implementation is ever changing, and  versions of Microsoft Office older than 16.0.13522.10000 may not expose enough information for this option to be of any use.

==== Use}+ the new typed character support in Windows Console when available ====[AdvancedSettingsKeyboardSupportInLegacy]
This option enables an alternative method for detecting typed characters in Windows command consoles.
While it improves performance and prevents some console output from being spelled out, it may be incompatible with some terminal programs.
@@ -1843,6 +1864,20 @@ This feature is available and enabled by default on Windows 10 versions 1607 and
Warning: with this option enabled, typed characters that do not appear onscreen, such as passwords, will not be suppressed.
In untrusted environments, you may temporarily disable [speak typed characters #KeyboardSettingsSpeakTypedCharacters] and [speak typed words #KeyboardSettingsSpeakTypedWords] when entering passwords.

+{==== Diff algorithm ====[DiffAlgo]
This setting controls how NVDA determines the new text to speak in terminals.
The diff algorithm combo box has three options:
- Automatic: as of NVDA 2021.1, this option is equivalent to Difflib.
In a future release, it may be changed to Diff Match Patch pending positive user testing.
- allow Diff Match Patch: This option causes NVDA to calculate changes to terminal text by character.
It may improve performance when large volumes of text are written to the console and allow more accurate reporting of changes made in the middle of lines.
However, it may be incompatible with some applications.
This feature is supported in Windows Console on Windows 10 versions 1607 and later.
Additionally, it may be available in other terminals on earlier Windows releases.
- force Difflib: this option causes NVDA to calculate changes to terminal text by line.
It is identical to NVDA's behaviour in versions 2020.4 and earlier.
-}+

==== Attempt to cancel speech for expired focus events ====[CancelExpiredFocusSpeech]
This option enables behaviour which attempts to cancel speech for expired focus events.
In particular moving quickly through messages in Gmail with Chrome can cause NVDA to speak outdated information.
