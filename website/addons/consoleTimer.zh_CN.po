# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2018-07-07 18:09+1000\n"
"PO-Revision-Date: 2018-07-06 19:02+0800\n"
"Last-Translator: dingpengyu <dingpengyu06@gmail.com>\n"
"Language-Team: \n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.0.8\n"

#. type: Plain text
#, no-wrap
msgid "[[!meta title=\"Console Timer\"]]\n"
msgstr "[[!meta title=\"Console Timer-NVDA-ssh命令行补充插件\"]]\n"

#. type: Plain text
#, no-wrap
msgid ""
"*   Author: Derek Riemer\n"
"* Download [Stable Version][1]\n"
msgstr ""
"*   作者: Derek Riemer\n"
"* 下载 [稳定版][1]\n"

#. type: Title #
#, no-wrap
msgid "consoleTimer"
msgstr "consoleTimer"

#. type: Plain text
msgid ""
"consoleTimer was written by derek riemer, and is GPL V2, as required by "
"being an NVDA addon."
msgstr ""
"consoleTimer是由derek riemer编写的一款基于NVDA的插件，它是基于GPL V2进行分发"
"的。"

#. type: Bullet: '* '
msgid ""
"[Source available on Github:](https://github.com/derekriemer/consoleTimer)"
msgstr ""
"[Github源代码托管地址：]（https://github.com/derekriemer/consoleTimer）"

#. type: Title ##
#, no-wrap
msgid "Background"
msgstr "开发插件的背景"

#. type: Plain text
msgid ""
"When using command lines over ssh, usually, there's network lag. This lag is "
"expected, however, the way NVDA handles cursor movement is not friendly with "
"lag in terminals, because this operation is a synchrinous opperation. This "
"causes NVDA to wrongly report the wrong letter when moving to another letter "
"with the arrow keys. For example, if the user is on the p of grep, and they "
"press right arrow, they may hear \"t\" instead of space. This is due to NVDA "
"not waiting long enough to actually properly handle this cursor movement.  "
"This addon was written because I do lots of server administration, and I "
"wanted cursor navigation to work."
msgstr ""
"通过ssh使用命令行时，通常会出现网络延迟。然而，这种延迟是预料之中的，因为这种"
"操作是同步操作，NVDA处理光标移动的方式对终端延迟不友好。这会导致NVDA在用光标"
"键移动到另一个字母时读的字母不对。例如，如果用户位于grep的p上，并且他们按右箭"
"头，他们可能会听到“t”而不是空格。这是由于NVDA没有停顿足够长的时间来处理这个光"
"标移动。这个插件是因为我需要做大量的服务器管理工作，我希望实现光标导航就这样"
"才写的。"

#. type: Title ##
#, no-wrap
msgid "TLDR usage instructions"
msgstr "简短使用说明"

#. type: Plain text
msgid ""
"When in a console, if NVDA is missing or repeating letters as you move "
"around, simply press nvda+shift+pageup to teach it to be more patient, or if "
"it is too laggy, press nvda+shift+page down to teach it to be less patient. "
"This addon will have no affect outside terminals, and the patience changes "
"by .01 for every keypress."
msgstr ""
"当在控制台中时，如果NVDA在移动时少读或重复读字母，只需按nvda + shift + pageup"
"来进行修正，或者如果不能解决问题还可以，按nvda + shift +下光标。这个插件不会"
"影响外部终端，并且每次按键案下以后会改变0.01秒的延迟。"

#. type: Title ##
#, no-wrap
msgid "How to make this work with custom terminals"
msgstr "如何使用自定义终端工作"

#. type: Plain text
msgid ""
"If you are a developer who wants NVDA to recognize a section or portion of "
"your app as a terminal, and it isn't already, you should implement an "
"appModule for this purpose, to gain the relevant behavior, I.E. announcement "
"of new text written to stdout, etc. Please raise a ticket against [NVDA]"
"(https://github.com/nvaccess/nvda/issues/new), and we can help you get your "
"terminal appModule into the screen reader. Support for Putty, Cygwin "
"(Mintty), and secureCRT is already implemtned. Apps such as R may be "
"implemented in the future.  If your app is properly recognized as a terminal "
"by NVDA, (The termminal behavior is properly injected at runtime), this "
"addon should just work. If it doesn't, please let me know via an issue. How "
"to write an app module is out of scope for this document, but is well "
"documented in the [NVDA Developer Guide](https://www.nvaccess.org/files/nvda/"
"documentation/developerGuide.html). This example illustrates [an appModule "
"to teach NVDA that the terminal window on PuTTY is a terminal](https://"
"github.com/nvaccess/nvda/blob/master/source/appModules/putty.py). Also, "
"[Here's an example implementation for MinTTY](https://github.com/nvaccess/"
"nvda/blob/master/source/appModules/mintty.py). The most important thing to "
"make sure happens is that NVDAObjects.behaviors.Terminal is injected to the "
"class list."
msgstr ""
"如果您是希望NVDA将您的应用程序的一部分或识别为终端，那么您应该为此实现"
"appModule，以获取相关行为也就是宣布写入标准输出的新文本等。请根据[NVDA]"
"（https://github.com/nvaccess/nvda/issues/new）提出一张票，我们可以帮助您将终"
"端appModule放入屏幕阅读器。已经实施了对Putty，Cygwin（Mintty）和secureCRT的支"
"持。 R等应用程序将来可能会实现。如果您的应用程序已被NVDA正确识别为终端（术语"
"行为在运行时正确注入），则该插件应该可以正常工作。如果没有，请通过问题告诉"
"我。如何编写应用程序模块超出了本文档的范围，但在[NVDA开发人员指南]（https://"
"www.nvaccess.org/files/nvda/documentation/developerGuide.html）中有详细记录。"
"这个例子说明了[一个appModule教导NVDA，PuTTY上的终端窗口是终端]（https://"
"github.com/nvaccess/nvda/blob/master/source/appModules/putty.py）。此外，[这"
"是MinTTY的示例实现]（https://github.com/nvaccess/nvda/blob/master/source/"
"appModules/mintty.py）。确保发生的最重要的事情是将NVDAObjects.behaviors."
"Terminal注入到班级列表中。"

#. type: Plain text
#, no-wrap
msgid "[[!tag dev]]\n"
msgstr "[[!tag dev]]\n"

#. type: Plain text
msgid "[1]: https://addons.nvda-project.org/files/get.php?file=cont"
msgstr "[1]: https://addons.nvda-project.org/files/get.php?file=cont"

#. type: Plain text
msgid "[2]: https://derekriemer.com/node/44"
msgstr "[2]: https://derekriemer.com/node/44"
